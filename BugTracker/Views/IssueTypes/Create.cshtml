@model BugTracker.Models.IssueType
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Create Issue Type";
}
@if (SignInManager.IsSignedIn(User))
{
    <h1>Create</h1>

    <h4>IssueType</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="IssueTypeName" class="control-label"></label>
                    <input asp-for="IssueTypeName" class="form-control" />
                    <span asp-validation-for="IssueTypeName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a class="btn btn-secondary" asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
            }
            else
            {
                Context.Response.Redirect("/Home");

            }